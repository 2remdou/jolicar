<?php

namespace Jc\JolieCarBundle\Entity;

use Doctrine\ORM\EntityManager;
use Doctrine\ORM\EntityRepository;
use Symfony\Component\Security\Core\SecurityContextInterface;

/**
 * VoitureRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VoitureRepository extends EntityRepository
{

    protected function getAllInformations()
    {
        $qb = $this->createQueryBuilder('v')
                ->leftJoin('v.modele', 'modele')
                ->addSelect('modele')
                ->leftJoin('modele.marque', 'marque')
                ->addSelect('marque')
                ->leftJoin('v.boitier', 'boitier')
                ->addSelect('boitier')
                ->leftJoin('v.carburant', 'carburant')
                ->addSelect('carburant')
                ->leftJoin('v.user', 'user')
                ->addSelect('user')
                ->leftJoin('user.adresse','adresse')
                ->addSelect('adresse')
                ->leftJoin('v.mainImage','mainImage')
                ->addSelect('mainImage')
                ->leftJoin('v.images', 'image')
                ->addSelect('image');
        return $qb;        
    }
    protected function getApercuInformation()
    {
        $qb = $this->createQueryBuilder('v')
                ->leftJoin('v.modele', 'modele')
                ->addSelect('modele')
                ->leftJoin('modele.marque', 'marque')
                ->addSelect('marque')
                ->leftJoin('v.mainImage', 'mainImage')
                ->addSelect('mainImage');
        return $qb;        
    }
    public function getAll()
    {
        $qb = $this->getApercuInformation();
        
        $q = $qb->getQuery();
        return $q->getResult();
    }
     public function findByIdwithAllInformation($id)
    {
        $qb = $this->getAllInformations();
        $q = $qb->where("v.id = :id")
                ->setParameter("id", $id)
                ->getQuery();
        return $q->getSingleResult();
    }
    
    
    public function getTopCar()
    {
        $qb = $this->getApercuInformation();
        
        $q = $qb->where('v.top = :top')
                ->setParameter('top', true)
                ->getQuery();
        
        return $q->getResult();
    }
    public function getNewCar()
    {
        $qb = $this->getApercuInformation();
        
        $q = $qb->where('v.newCar = :newCar')
                ->setParameter("newCar", true)
                ->getQuery();
        
        return $q->getResult();
    }

    public function findByUser($id){
        $qb = $this->getApercuInformation();

        $q = $qb->where('v.user = :id')
                ->setParameter('id',$id)
                ->getQuery();

        return $q->getResult();
    }

    public function isForUser($id,$user){
        $car = $this->find($id);
        //$user = $this->securityContext->getToken()->getUser();
        if($user === null || $car === null || $car->getUser() != $user){
            return false;
        }

        return true;
    }
   
}
